Resources:
  ServicesMoviesServiceLambdaServiceRole41EFA59C:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: APIStack/Services/MoviesServiceLambda/ServiceRole/Resource
  ServicesMoviesServiceLambdaServiceRoleDefaultPolicyEB9459EA:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - xray:PutTraceSegments
              - xray:PutTelemetryRecords
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: ServicesMoviesServiceLambdaServiceRoleDefaultPolicyEB9459EA
      Roles:
        - Ref: ServicesMoviesServiceLambdaServiceRole41EFA59C
    Metadata:
      aws:cdk:path: APIStack/Services/MoviesServiceLambda/ServiceRole/DefaultPolicy/Resource
  ServicesMoviesServiceLambda700C6E5D:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParametersc8ef2267db007b050ae34cfa2ff4f9702d156dcf4509573c1eda6f1e7fdd64f5S3BucketE71AA30F
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersc8ef2267db007b050ae34cfa2ff4f9702d156dcf4509573c1eda6f1e7fdd64f5S3VersionKey40936696
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersc8ef2267db007b050ae34cfa2ff4f9702d156dcf4509573c1eda6f1e7fdd64f5S3VersionKey40936696
      Role:
        Fn::GetAtt:
          - ServicesMoviesServiceLambdaServiceRole41EFA59C
          - Arn
      Environment:
        Variables:
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
          LOG_LEVEL: "40"
      Handler: index.handler
      Runtime: nodejs14.x
      Timeout: 10
      TracingConfig:
        Mode: Active
    DependsOn:
      - ServicesMoviesServiceLambdaServiceRoleDefaultPolicyEB9459EA
      - ServicesMoviesServiceLambdaServiceRole41EFA59C
    Metadata:
      aws:cdk:path: APIStack/Services/MoviesServiceLambda/Resource
      aws:asset:path: /home/kevin/Desktop/POCs/serverless-api-nest/infrastructure/cdk.out/asset.c8ef2267db007b050ae34cfa2ff4f9702d156dcf4509573c1eda6f1e7fdd64f5
      aws:asset:property: Code
  ServicesMoviesServiceLambdaLogRetentionCC242B30:
    Type: Custom::LogRetention
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A
          - Arn
      LogGroupName:
        Fn::Join:
          - ""
          - - /aws/lambda/
            - Ref: ServicesMoviesServiceLambda700C6E5D
      RetentionInDays: 1
    Metadata:
      aws:cdk:path: APIStack/Services/MoviesServiceLambda/LogRetention/Resource
  LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: APIStack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource
  LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - logs:PutRetentionPolicy
              - logs:DeleteRetentionPolicy
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB
      Roles:
        - Ref: LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB
    Metadata:
      aws:cdk:path: APIStack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy/Resource
  LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A:
    Type: AWS::Lambda::Function
    Properties:
      Handler: index.handler
      Runtime: nodejs14.x
      Code:
        S3Bucket:
          Ref: AssetParameters67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24S3Bucket4D46ABB5
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24S3VersionKeyB0F28861
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24S3VersionKeyB0F28861
      Role:
        Fn::GetAtt:
          - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB
          - Arn
    DependsOn:
      - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB
      - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB
    Metadata:
      aws:cdk:path: APIStack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Resource
  APIHttpProxyApi5C8FC687:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      CorsConfiguration:
        AllowCredentials: true
        AllowHeaders:
          - Authorization
          - Content-Type
          - "*"
        AllowMethods:
          - GET
          - POST
          - DELETE
          - PUT
          - PATCH
        AllowOrigins:
          - http://localhost:3000
          - https://*
        MaxAge: 864000
      Name: serverless-api-nest
      ProtocolType: HTTP
    Metadata:
      aws:cdk:path: APIStack/API/HttpProxyApi/Resource
  APIHttpProxyApiDefaultStage0408E816:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      ApiId:
        Ref: APIHttpProxyApi5C8FC687
      StageName: $default
      AutoDeploy: true
    Metadata:
      aws:cdk:path: APIStack/API/HttpProxyApi/DefaultStage/Resource
  APIHttpProxyApiGETmoviesserviceproxyAPIStackAPIHttpProxyApiGETmoviesserviceproxyA5AC92A1PermissionCBD5A911:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - ServicesMoviesServiceLambda700C6E5D
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: APIHttpProxyApi5C8FC687
            - /*/*/movies-service/{proxy+}
    Metadata:
      aws:cdk:path: APIStack/API/HttpProxyApi/GET--movies-service--{proxy+}/APIStackAPIHttpProxyApiGETmoviesserviceproxyA5AC92A1-Permission
  APIHttpProxyApiGETmoviesserviceproxyHttpIntegration1f396aab0a7cdf7b75d184e0d74dfab271510F5B:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: APIHttpProxyApi5C8FC687
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::GetAtt:
          - ServicesMoviesServiceLambda700C6E5D
          - Arn
      PayloadFormatVersion: "2.0"
    Metadata:
      aws:cdk:path: APIStack/API/HttpProxyApi/GET--movies-service--{proxy+}/HttpIntegration-1f396aab0a7cdf7b75d184e0d74dfab2/Resource
  APIHttpProxyApiGETmoviesserviceproxyA0189081:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: APIHttpProxyApi5C8FC687
      RouteKey: GET /movies-service/{proxy+}
      AuthorizationType: NONE
      Target:
        Fn::Join:
          - ""
          - - integrations/
            - Ref: APIHttpProxyApiGETmoviesserviceproxyHttpIntegration1f396aab0a7cdf7b75d184e0d74dfab271510F5B
    Metadata:
      aws:cdk:path: APIStack/API/HttpProxyApi/GET--movies-service--{proxy+}/Resource
  APIHttpProxyApiPOSTmoviesserviceproxyAPIStackAPIHttpProxyApiPOSTmoviesserviceproxy4F45B403Permission807DC950:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - ServicesMoviesServiceLambda700C6E5D
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: APIHttpProxyApi5C8FC687
            - /*/*/movies-service/{proxy+}
    Metadata:
      aws:cdk:path: APIStack/API/HttpProxyApi/POST--movies-service--{proxy+}/APIStackAPIHttpProxyApiPOSTmoviesserviceproxy4F45B403-Permission
  APIHttpProxyApiPOSTmoviesserviceproxyF8CFCAF4:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: APIHttpProxyApi5C8FC687
      RouteKey: POST /movies-service/{proxy+}
      AuthorizationType: NONE
      Target:
        Fn::Join:
          - ""
          - - integrations/
            - Ref: APIHttpProxyApiGETmoviesserviceproxyHttpIntegration1f396aab0a7cdf7b75d184e0d74dfab271510F5B
    Metadata:
      aws:cdk:path: APIStack/API/HttpProxyApi/POST--movies-service--{proxy+}/Resource
  APIHttpProxyApiDELETEmoviesserviceproxyAPIStackAPIHttpProxyApiDELETEmoviesserviceproxy6A6D5A49Permission31F306B6:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - ServicesMoviesServiceLambda700C6E5D
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: APIHttpProxyApi5C8FC687
            - /*/*/movies-service/{proxy+}
    Metadata:
      aws:cdk:path: APIStack/API/HttpProxyApi/DELETE--movies-service--{proxy+}/APIStackAPIHttpProxyApiDELETEmoviesserviceproxy6A6D5A49-Permission
  APIHttpProxyApiDELETEmoviesserviceproxy1BDDF1FB:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: APIHttpProxyApi5C8FC687
      RouteKey: DELETE /movies-service/{proxy+}
      AuthorizationType: NONE
      Target:
        Fn::Join:
          - ""
          - - integrations/
            - Ref: APIHttpProxyApiGETmoviesserviceproxyHttpIntegration1f396aab0a7cdf7b75d184e0d74dfab271510F5B
    Metadata:
      aws:cdk:path: APIStack/API/HttpProxyApi/DELETE--movies-service--{proxy+}/Resource
  APIHttpProxyApiPUTmoviesserviceproxyAPIStackAPIHttpProxyApiPUTmoviesserviceproxy7CA5009FPermissionAE3E7D60:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - ServicesMoviesServiceLambda700C6E5D
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: APIHttpProxyApi5C8FC687
            - /*/*/movies-service/{proxy+}
    Metadata:
      aws:cdk:path: APIStack/API/HttpProxyApi/PUT--movies-service--{proxy+}/APIStackAPIHttpProxyApiPUTmoviesserviceproxy7CA5009F-Permission
  APIHttpProxyApiPUTmoviesserviceproxy0DD10709:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: APIHttpProxyApi5C8FC687
      RouteKey: PUT /movies-service/{proxy+}
      AuthorizationType: NONE
      Target:
        Fn::Join:
          - ""
          - - integrations/
            - Ref: APIHttpProxyApiGETmoviesserviceproxyHttpIntegration1f396aab0a7cdf7b75d184e0d74dfab271510F5B
    Metadata:
      aws:cdk:path: APIStack/API/HttpProxyApi/PUT--movies-service--{proxy+}/Resource
  APIHttpProxyApiPATCHmoviesserviceproxyAPIStackAPIHttpProxyApiPATCHmoviesserviceproxyC797C6A8PermissionD4704BA3:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - ServicesMoviesServiceLambda700C6E5D
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: APIHttpProxyApi5C8FC687
            - /*/*/movies-service/{proxy+}
    Metadata:
      aws:cdk:path: APIStack/API/HttpProxyApi/PATCH--movies-service--{proxy+}/APIStackAPIHttpProxyApiPATCHmoviesserviceproxyC797C6A8-Permission
  APIHttpProxyApiPATCHmoviesserviceproxyBEDBDA74:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: APIHttpProxyApi5C8FC687
      RouteKey: PATCH /movies-service/{proxy+}
      AuthorizationType: NONE
      Target:
        Fn::Join:
          - ""
          - - integrations/
            - Ref: APIHttpProxyApiGETmoviesserviceproxyHttpIntegration1f396aab0a7cdf7b75d184e0d74dfab271510F5B
    Metadata:
      aws:cdk:path: APIStack/API/HttpProxyApi/PATCH--movies-service--{proxy+}/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAAA11Q0U7DMAz8Ft5TjwIS4o1tEgIJwVS+wKQmStcmVexsmqL+O0kq9sDT3Vn2+ewW2vYJbm+e8cyN7o+bpH0gSF+C+qj23rGEqEVtmUly0Vhn1P7HdcQ+Bk3qSnLxgAEnEgpFfEaZoxSWXXor1rtFlS1pxOm7x8b5ngaGjwov0enSoixOkDo/VsOKBz9afan+lS2K7xsseRhqrKxhF/WRZIdMarWHlAeurmWYwmSZa4zRG4Z3b7oc1tUGnK1BoTNeTneQXkXm7WzLWIEiy+0100pKqfNRVvbmhEzAv1X/ZO1blkWVi2Hgzal9gPYxf31ga5sQc4SJoFvxFwcqMxOSAQAA
    Metadata:
      aws:cdk:path: APIStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Parameters:
  AssetParametersc8ef2267db007b050ae34cfa2ff4f9702d156dcf4509573c1eda6f1e7fdd64f5S3BucketE71AA30F:
    Type: String
    Description: S3 bucket for asset "c8ef2267db007b050ae34cfa2ff4f9702d156dcf4509573c1eda6f1e7fdd64f5"
  AssetParametersc8ef2267db007b050ae34cfa2ff4f9702d156dcf4509573c1eda6f1e7fdd64f5S3VersionKey40936696:
    Type: String
    Description: S3 key for asset version "c8ef2267db007b050ae34cfa2ff4f9702d156dcf4509573c1eda6f1e7fdd64f5"
  AssetParametersc8ef2267db007b050ae34cfa2ff4f9702d156dcf4509573c1eda6f1e7fdd64f5ArtifactHashAA48FBBD:
    Type: String
    Description: Artifact hash for asset "c8ef2267db007b050ae34cfa2ff4f9702d156dcf4509573c1eda6f1e7fdd64f5"
  AssetParameters67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24S3Bucket4D46ABB5:
    Type: String
    Description: S3 bucket for asset "67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24"
  AssetParameters67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24S3VersionKeyB0F28861:
    Type: String
    Description: S3 key for asset version "67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24"
  AssetParameters67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24ArtifactHashBA91B77F:
    Type: String
    Description: Artifact hash for asset "67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24"
Outputs:
  APIURL2B7029EB:
    Value:
      Fn::GetAtt:
        - APIHttpProxyApi5C8FC687
        - ApiEndpoint
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2

